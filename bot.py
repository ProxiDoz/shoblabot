#!/usr/bin/python3.5
# -*- coding: utf-8 -*-
import os  # –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
import json  # –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ª–æ–≤–∞—Ä—å –≤ —Å—Ç—Ä–æ–∫—É
import time  # –î–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
import psutil
import telebot
import datetime
import constants
import secret
# import cherry
import threading
import subprocess
import urllib.request as urllib2  # –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ Telegram –≤ –®–æ–±–ª—É
from urllib.parse import quote


# # # # # # # # # # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è # # # # # # # # # # #
# Token –±–æ—Ç–∞
bot = telebot.TeleBot(secret.tg_token)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ–ø—Ä–æ—Å–∞
who_opros = {}
who_count = len(constants.who_will[0])
who_odd = who_count % 2

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Å–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
activity_count = {}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–∫–∏–¥–æ–∫
disc_count = len(constants.buttons[0])
discounts = telebot.types.InlineKeyboardButton(text='–í—Å–µ —Å–∫–∏–¥–∫–∏ üí∞', url='https://photos.app.goo.gl/Xu4UQWqhSTcBVwt27')
channel = telebot.types.InlineKeyboardButton(text='–ö–∞–Ω–∞–ª üí≥', url='https://t.me/joinchat/AAAAAEk6NVud6BKc7YzZ2g')


# # # # # # # # # # # –¢–µ–ª–æ –±–æ—Ç–∞ # # # # # # # # # # #
# –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(commands=['start'])
def handle_start(message):
    try:
        update_activity('start')
        if message.chat.id == secret.tg_chat_id or message.from_user.id in constants.tg_ids:
            bot.send_message(secret.tg_requests_chat_id, 'üïπ [start](tg://user?id={0})'.format(str(message.from_user.id)), parse_mode='Markdown')
            bot.send_message(message.chat.id, constants.help_text, disable_web_page_preview=True, parse_mode='Markdown')
        else:
            bot.send_message(message.chat.id, constants.help_text_light, parse_mode='Markdown')
    except Exception as e:
        send_error(message, 0, e)


# –í—ã–∑–æ–≤ —Å–ø—Ä–∞–≤–∫–∏
@bot.message_handler(commands=['help'])
def handle_help(message):
    try:
        update_activity('help')
        if message.chat.id == secret.tg_chat_id or message.from_user.id in constants.tg_ids:
            bot.send_message(secret.tg_requests_chat_id, '‚ùì [help](tg://user?id={0})'.format(str(message.from_user.id)), parse_mode='Markdown')
            bot.send_message(message.chat.id, constants.help_text, reply_markup=constants.help_keyboard, parse_mode='Markdown')
    except Exception as e:
        send_error(message, 1, e)


# # # # # # –°–ª—É–∂–µ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∫–æ–º–∞–Ω–¥—ã
# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å—Ç–∞—Ä—Ç–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
# def send_start_time():
#     try:
#         bot.send_message(secret.apple_id, '‚è≥ *–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:* _{0}_'.format(time.ctime(time.time())), parse_mode='Markdown')
#     except Exception as e:
#         bot.send_message(secret.apple_id, '‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ send_start_time:\n*–û—à–∏–±–∫–∞:*\n' + str(e))


# –§—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –∏ —Ñ—É–Ω–∫—Ü–∏—è–º
def update_activity(field):
    try:
        now_time = datetime.datetime.now()
        cur_mnth = str(now_time.year) + '.' + str(now_time.month)
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ activity_count
        if os.path.isfile('/root/router/shoblabot/activity_count'):
            with open('/root/router/shoblabot/activity_count', 'r') as lang:
                activity_count = json.loads(lang.read())
        activity_count[cur_mnth][field] += 1
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª activity_count
        with open('/root/router/shoblabot/activity_count', 'w') as lang:
            lang.write(json.dumps(activity_count))
    except Exception as e:
        bot.send_message(secret.apple_id, '‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ udate_activity:\n*–ü–æ–ª–µ: *{0}\n*–û—à–∏–±–∫–∞:*\n{1}'.format(field, e))
        

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–∫–∏
def send_error(message, error_id, error):
    try:
        bot.send_message(secret.apple_id,
                         '‚ùå *{0}\n–û—Ç:* {1} {2}\n*Username:* {3}\n*–ß–∞—Ç:* {4} {5} {6}\n*id:* {7}\n*–°–æ–æ–±—â–µ–Ω–∏–µ:* {8}\n'
                         '*–í—Ä–µ–º—è:* _{9}_\n*–û—à–∏–±–∫–∞:* _{10}_'.format(constants.errors[error_id], str(message.from_user.first_name),
                                                 str(message.from_user.last_name), str(message.from_user.username),
                                                 str(message.chat.title), str(message.chat.first_name),
                                                 str(message.chat.last_name), str(message.chat.id), message.text, time.ctime(time.time()), error),
                         parse_mode='Markdown')
    except Exception as e:
        bot.send_message(secret.apple_id, '‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ send_error:\n*–°–æ–æ–±—â–µ–Ω–∏–µ: *{0}\n*–û—à–∏–±–∫–∞:*\n{1}'.format(message.text, e))

        
# –í—ã–∑–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
@bot.message_handler(commands=['stat'])
def statistics(message):
    try:
        now_time = datetime.datetime.now()
        cur_mnth = str(now_time.year) + '.' + str(now_time.month)
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ activity_count
        if os.path.isfile('/root/router/shoblabot/activity_count'):
            with open('/root/router/shoblabot/activity_count', 'r') as lang:
                activity_count = json.loads(lang.read())
        month_statistics = constants.month_statistics.format(activity_count[cur_mnth]['opros'], activity_count[cur_mnth]['discount'],
                                                       activity_count[cur_mnth]['devka'], activity_count[cur_mnth]['vracha'],
                                                       activity_count[cur_mnth]['pin'], activity_count[cur_mnth]['rapid_new'],
                                                       activity_count[cur_mnth]['cyk'], activity_count[cur_mnth]['russia'],
                                                       activity_count[cur_mnth]['team'], activity_count[cur_mnth]['start'],
                                                       activity_count[cur_mnth]['help'], activity_count[cur_mnth]['who'], activity_count[cur_mnth]['rapid'])
        bot.send_message(secret.apple_id, month_statistics, parse_mode='Markdown')
    except Exception as e:
        send_error(message, 4, e)

          
# –í—ã–∑–æ–≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–µ
@bot.message_handler(commands=['s'])
def server_info(message):
    try:
        if message.chat.id == secret.apple_id:
            try:
                if message.text == '/s':
                    ram = psutil.virtual_memory()
                    bot.send_message(message.chat.id, 'üíæ Free RAM: {0}%'.format(ram[2]))
                else:
                    bot.send_message(secret.tg_chat_id, message.text[3:len(message.text)])
                    bot.send_message(secret.apple_id, '‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
            except Exception as e:
                send_error(message, 21, e)
        else:
            send_error(message, 6, 'N/A')
    except Exception as e:
        send_error(message, 5, e)


# # # # # # –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã
# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø—Ä–æ—Å–∞ –≤ —á–∞—Ç
@bot.message_handler(commands=['who'])
def who_will(message):
    try:
        update_activity('who')
        if message.chat.id == secret.tg_chat_id:
            bot.send_message(secret.tg_requests_chat_id, '‚úÖ‚ùå [who](tg://user?id={0})'.format(str(message.from_user.id)), parse_mode='Markdown')
            force_reply = telebot.types.ForceReply(True)
            bot.send_message(secret.tg_chat_id, constants.enter_question_new, reply_to_message_id=message.message_id, reply_markup=force_reply)
            bot.delete_message(secret.tg_chat_id, message.message_id)
        elif message.chat.id in constants.tg_ids:
            bot.send_message(message.chat.id, '‚ùå –û–ø—Ä–æ—Å —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ [–®–æ–±–ª–µ](https://t.me/c/1126587083/)', parse_mode='Markdown')
    except Exception as e:
        send_error(message, 7, e)


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫–∏–¥–æ–∫
@bot.message_handler(commands=['discount'])
def send_discount(message):
    try:
        if message.from_user.id in constants.tg_ids:
            i = 0
            keyboard_start = telebot.types.InlineKeyboardMarkup(row_width=2)
            while i < disc_count - 1:
                keyboard_start.add(telebot.types.InlineKeyboardButton(text=constants.buttons[0][i+1], callback_data=constants.buttons[1][i+1]),
                                   telebot.types.InlineKeyboardButton(text=constants.buttons[0][i+2], callback_data=constants.buttons[1][i+2]))
                i += 2
            keyboard_start.add(discounts, channel)
            bot.send_message(message.chat.id, constants.buttons[2][0], reply_markup=keyboard_start, parse_mode='Markdown')
            update_activity('discount')
    except Exception as e:
        send_error(message, 8, e)


# # # # # # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–≤–∫–∏ –∑–∞ —Ä—É–ª–µ–º
@bot.message_handler(func=lambda message: message.text and message.text.lower() in constants.dvk and message.chat.id == secret.tg_chat_id)
def aaa(message):
    try:
        bot.send_message(secret.tg_chat_id, '–î–≤–∫ –∑ —Ä–ª–º')
        update_activity('devka')
    except Exception as e:
        send_error(message, 9, e)


@bot.message_handler(func=lambda message: message.text and message.text.lower() in constants.devka and message.chat.id == secret.tg_chat_id)
def aaaa(message):
    try:
        bot.send_message(secret.tg_chat_id, '–î–µ–≤–∫–∞ –∑–∞ —Ä—É–ª—ë–º')
        update_activity('devka')
    except Exception as e:
        send_error(message, 10, e)

        
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –†–ê–°–ò–Ø
@bot.message_handler(func=lambda message: message.text and message.text.lower() in constants.russia and message.chat.id == secret.tg_chat_id)
def russia(message):
    try:
        bot.send_voice(secret.tg_chat_id, 'AwACAgIAAxkBAAJDIWLGyK15Ym3bMc0u5PU9YXtDDxHnAALtHAACbJI4SiCUtXmDfvoxKQQ', 'ü´°')
        update_activity('russia')
    except Exception as e:
        send_error(message, 11, e)

        
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ä–∞—á–∞
@bot.message_handler(func=lambda message: message.text and message.text.lower() in constants.vracha and message.chat.id == secret.tg_chat_id)
def vracha(message):
    try:
        bot.send_document(secret.tg_chat_id, 'CgADAgADRgIAAkbDcEn-Ox-uqrgsHgI', caption='@oxy_genium')
        update_activity('vracha')
    except Exception as e:
        send_error(message, 12, e)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–∏—Ç–∞
@bot.message_handler(func=lambda message: message.text and message.text.lower() in constants.git2 and message.chat.id == secret.tg_chat_id)
def git(message):
    try:
        bot.send_message(secret.tg_chat_id, '–•—É–∏—Ç')
        update_activity('git')
    except Exception as e:
        send_error(message, 13, e)

        
# –û–±—Ä–∞–±–æ—Ç–∫–∞ @team
@bot.message_handler(func=lambda message: message.text and constants.team in message.text.lower() and message.chat.id == secret.tg_chat_id)
def team(message):
    try:
        bot.send_message(chat_id=secret.tg_chat_id, disable_notification=False, reply_to_message_id=message.message_id, text='‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ, –®–æ–±–ª–∞*\n\n[–¢–∞—Ä—Å](t.me/shackoor), [–ê–ø–æ–ª](t.me/apoll), [–ò–≤–∞–Ω–æ–≤—Å–∫–∏–π](t.me/ivanovmm), [–ö–æ–Ω–∞—Ç–∏–∫](t.me/KanatoF), [–ö–∏—Ä](t.me/zhuykovkb), [–ö–∞—Ç—è](tg://user?id=434756061), [–ú–∞–∫—Å–æ–Ω](t.me/MrGogu), [–ù–æ—Å–∏–∫](tg://user?id=51994109), [–û–∫–∑](t.me/oxy_genium), [–ü–∞—É–∑–µ–Ω—å–∫](t.me/Pausenk), [–ù–¢–©](t.me/ntshch), [–¢–æ–ª—è–Ω–æ–≤—Å–∫–∏–π](t.me/toliyansky), [–í–∏–∫—Ç–æ—Ä](t.me/FrelVick), [–ú–æ—Ä–≥–æ](t.me/margoiv_a), [–ú–∏—à–∞–Ω—è](t.me/Mich37), [–ö—Å—é](t.me/ksenia_boorda), [–†–æ–º–æ–ª—ç](t.me/Roman_Kazitskiy), [–≠–ª—å—Ç–æ—Å](t.me/elvira_aes), [–ê–Ω—è](t.me/kebushka), [–î–µ–Ω–Ω–∏—Å](tg://user?id=503404575)', disable_web_page_preview=True, parse_mode="MarkdownV2")
        update_activity('team')
    except Exception as e:
        send_error(message, 14, e)

        
# –û–±—Ä–∞–±–æ—Ç–∫–∞ @rapid
@bot.message_handler(func=lambda message: message.text and message.text.lower().startswith(constants.rapid) and message.chat.id == secret.tg_chat_id)
def rapid(message):
    try:
        update_activity('rapid')
        # –°–ø–ª–∏—Ç—É–µ–º —Å—Ç—Ä–æ–∫—É –≤—ã–ø–∏–ª–∏–≤ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–Ω—É–∂–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –ø–æ –±–æ–∫–∞–º
        data = message.text.lower().strip().split(" ")
    
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–ª–∏—Ç–æ–≤–∞–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        # –∏ –µ—Å–ª–∏ —Ç–æ–∫–∞ 1 —ç–ª–µ–º–µ–Ω—Ç —Ç–æ –∑–Ω–∞—á–∏—Ç –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –ø–µ—Ä–µ–¥–∞–ª–∏
        # —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ help –ø–æ –¥–µ—Ñ–æ–ª—Ç—É
        size = len(data)
        value = 'help' if size == 1 else data[1]
        
        # –ù—É —Ç—É—Ç –ø–æ—á—Ç–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —Ç–æ–∫–∞ data[1] became value
        response = urllib2.urlopen('https://bot.zhuykovkb.ru:81/rapid?data=' + quote(value) + '&memberid=' + str(message.from_user.id))
        answer = json.loads(str(response.read(), 'utf-8'))
        bot.send_message(secret.tg_chat_id, answer['message'], parse_mode='Markdown')
        if answer['message'] == '–ù–æ–º–µ—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω':
            update_activity('rapid_new')
    except Exception as e:
        bot.send_message(secret.zhuykovkb_apple_id, '–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ rapid:\n\n–î–∞–Ω–Ω—ã–µ ' + quote(value) + '\n\n–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ ' + str(e))
        send_error(message, 15, e)

        
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–∞—Ä—Å—É–∫–∞
@bot.message_handler(func=lambda message: message.text and message.text.lower() in constants.suk and message.chat.id == secret.tg_chat_id)
def barsuk(message):
    try:
        bot.send_message(secret.tg_chat_id, '–ë–∞—Ä—Å—É–∫')
        update_activity('cyk')
    except Exception as e:
        send_error(message, 16, e)
        

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–∞—Ä—Å—é–∫–∞
@bot.message_handler(func=lambda message: message.text and message.text.lower() in constants.syuk and message.chat.id == secret.tg_chat_id)
def barsyuk(message):
    try:
        bot.send_message(secret.tg_chat_id, '–ë–∞—Ä—Å—é–∫')
        update_activity('cyk')
    except Exception as e:
        send_error(message, 17, e)
        

# –û–±—Ä–∞–±–æ—Ç–∫–∞ IPv6
@bot.message_handler(func=lambda message: message.text and message.text.lower() in constants.ip_block and message.chat.id == secret.tg_chat_id)
def block(message):
    try:
        bot.send_message(secret.tg_chat_id, '*–ó–Ω–∞—á–∏—Ç —Ç–∞–∫, - —Å—Ä–∞–∑—É –Ω–∞—Ö—É–π!*', parse_mode='Markdown')
    except Exception as e:
        send_error(message, 18, e)

    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞
@bot.message_handler(content_types=['text'])
def send_text(message):
    try:
        # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–ø–ª–∞–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
        if message.reply_to_message is not None and message.reply_to_message.from_user.id == secret.bot_id:
            # –ó–∞–ø—Ä–æ—Å –≤–Ω–µ—Å–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞ (–Ω–æ–≤–æ–≥–æ)
            if message.reply_to_message.text == constants.enter_question_new or message.reply_to_message.text == constants.too_large_question:
                try:
                    if len(message.text) <= 291:
                        opros = constants.tg_names[constants.tg_ids.index(message.from_user.id)] + ': ' + message.text
                        poll = bot.send_poll(secret.tg_chat_id, opros, constants.poll_options, is_anonymous=False, allows_multiple_answers=False)
                        stop_button = telebot.types.InlineKeyboardButton(text='–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø—Ä–æ—Å üö´',
                                                                         callback_data='stop_{0}_{1}'.format(
                                                                             poll.message_id, message.from_user.id))
                        keyboard_opros_stop = telebot.types.InlineKeyboardMarkup(row_width=1)
                        keyboard_opros_stop.add(stop_button)
                        bot.delete_message(secret.tg_chat_id, message.reply_to_message.message_id)
                        bot.edit_message_reply_markup(secret.tg_chat_id, poll.message_id, reply_markup=keyboard_opros_stop)
                        bot.delete_message(secret.tg_chat_id, message.message_id)
                        bot.pin_chat_message(secret.tg_chat_id, poll.message_id, disable_notification=False)
                        update_activity('opros')
                    else:
                        force_reply = telebot.types.ForceReply(True)
                        bot.delete_message(secret.tg_chat_id, message.reply_to_message.message_id)
                        bot.send_message(message.chat.id, constants.too_large_question, reply_to_message_id=message.message_id, reply_markup=force_reply)                       
                except Exception as e:
                    # bot.send_message(message.chat.id, constants.errors[14] + '\n–ù–æ–≤—ã–π –æ–ø—Ä–æ—Å–Ω–∏–∫\n' + str(e))
                    send_error(message, 19, e)      
            # –ó–∞–ø—Ä–æ—Å –≤–Ω–µ—Å–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞
            elif message.reply_to_message.text == constants.enter_question:
                try:
                    date = str(time.time() + 10800)
                    date = date.split('.')[0]
                    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ –æ–ø—Ä–æ—Å–∞ –≤ who
                    bashCopy = "cp /root/router/shoblabot/opros /root/router/shoblabot/who"
                    processC = subprocess.Popen(bashCopy.split(), stdout=subprocess.PIPE)
                    time.sleep(1)
                    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–æ—Å–∞ –≤ date
                    bashRename = 'mv /root/router/shoblabot/who/opros /root/router/shoblabot/who/{0}'.format(date)
                    processR = subprocess.Popen(bashRename.split(), stdout=subprocess.PIPE)
                    opros = '*–û–ø—Ä–æ—Å:* ' + message.text
                    keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
                    # button = [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
                    button = [None] * who_count
                    i = 0
                    while i < who_count - 1:
                        button[i] = telebot.types.InlineKeyboardButton(text=constants.who_will[0][i],
                                                                       callback_data='opr_' + str(i) + '_' + date)
                        button[i + 1] = telebot.types.InlineKeyboardButton(text=constants.who_will[0][i + 1],
                                                                           callback_data='opr_' + str(i + 1) + '_' + date)
                        keyboard.add(button[i], button[i + 1])
                        i += 2
                    if 1 == who_count % 2:
                        button[i] = telebot.types.InlineKeyboardButton(text=constants.who_will[0][i],
                                                                       callback_data='opr_' + str(i) + '_' + date)
                        keyboard.add(button[i])
                    bot.send_message(secret.tg_chat_id, opros, reply_markup=keyboard, parse_mode='Markdown')
                    bot.send_message(secret.tg_requests_chat_id, date, parse_mode='Markdown')
                    bot.delete_message(secret.tg_chat_id, message.reply_to_message.message_id)
                    bot.delete_message(secret.tg_chat_id, message.message_id)
                    update_activity('opros')
                except Exception as e:
                    send_error(message, 19, e)
            elif message.text == '@shoblabot':
                bot.pin_chat_message(chat_id=secret.tg_chat_id, message_id=message.reply_to_message.message_id,
                                     disable_notification=False)
                update_activity('pin')
        elif message.reply_to_message is not None and message.text == '@shoblabot':
            bot.pin_chat_message(chat_id=secret.tg_chat_id, message_id=message.reply_to_message.message_id,
                                 disable_notification=False)
            update_activity('pin')
    except Exception as e:
        send_error(message, 20, e)

        
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Call Back Data
@bot.callback_query_handler(func=lambda call: True)
def callback_buttons(call):
    try:
        # –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–ø—Ä–æ—Å–∞
        if call.data[0:4] == 'stop':
            message_id = int(call.data.split('_')[1])
            user_id = int(call.data.split('_')[2])
            try:
                if call.from_user.id == user_id:
                    bot.stop_poll(secret.tg_chat_id, message_id)
                else:
                    bot.answer_callback_query(call.id, constants.wrong_stop, show_alert=True)
            except Exception as e:
                send_error(call.message, 22, e)
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –æ–ø—Ä–æ—Å–∞ (—Å—Ç–∞—Ä–æ–≥–æ)
        elif call.data[0:2] == 'op':
            user_id = int(call.data.split('_')[1])
            try:
                date = call.data.split('_')[2]
                if call.from_user.id == constants.who_will_ids[user_id]:
                    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ date
                    if os.path.isfile('/root/router/shoblabot/who/{0}'.format(date)):
                        with open('/root/router/shoblabot/who/{0}'.format(date), 'r') as lang:
                            who_opros = json.loads(lang.read())
                    who_opros[str(call.from_user.id)] = (who_opros[str(call.from_user.id)] + 1) % 3 + 1
                    # button = [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
                    button = [None] * who_count
                    keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
                    i = 0
                    while i < who_count - 1:
                        button[i] = telebot.types.InlineKeyboardButton(text=constants.who_will[who_opros[str(constants.who_will_ids[i])]][i],callback_data='opr_' + str(i) + '_' + date)
                        button[i + 1] = telebot.types.InlineKeyboardButton(text=constants.who_will[who_opros[str(constants.who_will_ids[i + 1])]][i + 1],callback_data='opr_' + str(i + 1) + '_' + date)
                        keyboard.add(button[i], button[i + 1])
                        i += 2
                    if 1 == who_count % 2:
                        button[i] = telebot.types.InlineKeyboardButton(
                            text=constants.who_will[who_opros[str(constants.who_will_ids[i])]][i],
                            callback_data='opr_' + str(i) + '_' + date)
                        keyboard.add(button[i])
                    bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                                  reply_markup=keyboard)
                    if who_opros[str(1)] == 0:
                        who_opros[str(1)] = 1
                        bot.pin_chat_message(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                             disable_notification=False)
                    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
                    with open('/root/router/shoblabot/who/{0}'.format(date), 'w') as lang:
                        lang.write(json.dumps(who_opros))
            except Exception as e:
                send_error(call.message, 2, e)
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å–∫–∏–¥–æ–∫
        elif call.data[0:4] == 'disc':
            discount_id = int(call.data.split('_')[1])
            buttons_text = constants.buttons[0][0:discount_id] + constants.buttons[0][discount_id+1:len(constants.buttons[0])]
            buttons_callback_data = constants.buttons[1][0:discount_id] + constants.buttons[1][discount_id+1:len(constants.buttons[1])]
            keyboard_update = telebot.types.InlineKeyboardMarkup(row_width=2)
            i = 0
            while i < disc_count-2:
                keyboard_update.add(telebot.types.InlineKeyboardButton(text=buttons_text[i], callback_data=buttons_callback_data[i]),
                                    telebot.types.InlineKeyboardButton(text=buttons_text[i+1], callback_data=buttons_callback_data[i+1]))
                i += 2
            keyboard_update.add(discounts, channel)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=constants.buttons[2][discount_id], parse_mode='Markdown',
                                  reply_markup=keyboard_update)
    except Exception as e:
        send_error(call.message, 3, e)


# –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è —Å –¥—Ä –≤ –®–æ–±–ª—É
def sdr():
    try:
        threading.Timer(3600, sdr).start()  # –ö–∞–∂–¥—ã–µ –ø–æ–ª—á–∞—Å–∞ - 1800, –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω - 600
        now_time = datetime.datetime.now()
        dr = str(now_time.day) + '.' + str(now_time.month)
        i = 0
        if now_time.hour is not 10:
            return
        if now_time.day == 1: # –î–µ–Ω—å –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –±–æ—Ç—É –≤—ã–∫–ª–∞–¥—ã–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ–∫ –∑–∞ –º–µ—Å—è—Ü –ú–µ—Å–µ—á–Ω–∞—è –¥–µ—Å—è—Ç–∫–∞ —á–µ–ª–ª–µ–Ω–¥–∂
            if now_time.month == 1:
                cur_mnth = str(now_time.year-1) + '.12'
            else:
                cur_mnth = str(now_time.year) + '.' + str(now_time.month-1)
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ activity_count
            if os.path.isfile('/root/router/shoblabot/activity_count'):
                with open('/root/router/shoblabot/activity_count', 'r') as lang:
                    activity_count = json.loads(lang.read())
            month_statistics = constants.month_statistics.format(activity_count[cur_mnth]['opros'], activity_count[cur_mnth]['discount'],
                                                           activity_count[cur_mnth]['devka'], activity_count[cur_mnth]['vracha'],
                                                           activity_count[cur_mnth]['pin'], activity_count[cur_mnth]['rapid_new'],
                                                           activity_count[cur_mnth]['cyk'], activity_count[cur_mnth]['russia'],
                                                           activity_count[cur_mnth]['team'], activity_count[cur_mnth]['start'],
                                                           activity_count[cur_mnth]['help'], activity_count[cur_mnth]['who'], activity_count[cur_mnth]['rapid'])
            bot.send_message(secret.tg_chat_id, month_statistics, parse_mode='Markdown')
            # –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ 10—á–µ–ª–ª–µ–Ω–¥–∂
            challenge = bot.send_message(secret.tg_chat_id, '–®–æ–±–ª—è—Ç–∫–∏, –≤—Ä–µ–º—è –¥–ª—è #10—á–µ–ª–ª–µ–Ω–¥–∂ –∏ –≤—ã—à–∏—Ö —Ñ–æ—Ç–æ—á–µ–∫ –∑–∞ –º–µ—Å—è—Ü!üì∏', parse_mode='Markdown')
            bot.pin_chat_message(secret.tg_chat_id, challenge.message_id, disable_notification=False)
        if dr == str(28.5):  # –î–µ–Ω—å –ë–∞—è–Ω–∞ –≤ –®–æ–±–ª–µ –æ—Ç–º–µ—á–∞–µ—Ç—Å—è 28 –º–∞—è
            bot.send_message(secret.tg_chat_id, 'ü™ó –®–æ–±–ª–∞, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –î–Ω—ë–º –ë–∞—è–Ω–∞!')
        if dr == str(25.7):  # –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è –°–µ–±–∞
            bot.send_message(secret.tg_chat_id, '[Seb](tg://user?id=959656923), HB!ü•≥üá≤üáΩ\nFrom Shobla with love!', parse_mode='Markdown')
        for item in constants.tg_drs:
            if item == dr:
                bot.send_message(secret.tg_chat_id,
                                 '[{0}](tg://user?id={1}), —Å –¥—Ä!ü•≥'.format(constants.tg_names[i], constants.tg_ids[i]), parse_mode='Markdown')
            i += 1
    except Exception as e:
       bot.send_message(secret.apple_id, '‚ùå –û–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –®–æ–±–ª—É sdr():\n*–û—à–∏–±–∫–∞:*\n' + str(e))


# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π
try:
    bot.remove_webhook()
except Exception as e:
    bot.send_message(secret.apple_id, '‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ bot.remove_webhook():\n*–û—à–∏–±–∫–∞:*\n' + str(e))

# try:
#     bot.send_message(secret.apple_id, '‚è≥ *–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:* _{0}_'.format(time.ctime(time.time())), parse_mode='Markdown')
# except Exception as e:
#     bot.send_message(secret.apple_id, '‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ send_start_time:\n*–û—à–∏–±–∫–∞:*\n' + str(e))

try:
    sdr()
except Exception as e:
    bot.send_message(secret.apple_id, '‚ùå –û—à–∏–±–∫–∞ –≤ –∑–∞–ø—É—Å–∫–µ sdr():\n*–û—à–∏–±–∫–∞:*\n' + str(e))

try:
    bot.polling()
except Exception as e:
    bot.send_message(secret.apple_id, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ bot.polling():\n*–û—à–∏–±–∫–∞:*\n' + str(e))
    
# class WebhookServer(object):
# index —Ä–∞–≤–Ω–æ–∑–Ω–∞—á–Ω–æ /, —Ç.–∫. –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—é —á–∞—Å—Ç–∏ –ø–æ—Å–ª–µ ip-–∞–¥—Ä–µ—Å–∞ (–≥—Ä—É–±–æ –≥–æ–≤–æ—Ä—è)
#    @cherrypy.expose
#    def index(self):
#        length = int(cherrypy.request.headers['content-length'])
#        json_string = cherrypy.request.body.read(length).decode("utf-8")
#        update = telebot.types.Update.de_json(json_string)
#        bot.process_new_updates([update])
#        return ''

# if __name__ == '__main__':
#    cherrypy.config.update({
#        'server.socket_host': '127.0.0.1',
#        'server.socket_port': 7771,
#        'engine.autoreload.on': False
#    })
#    cherrypy.quickstart(WebhookServer(), '/', {'/': {}})
